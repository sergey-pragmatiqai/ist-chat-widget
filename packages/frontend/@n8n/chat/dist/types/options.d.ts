import { Component, Ref } from 'vue';
export interface ChatTheme {
    primaryColor?: string;
    primaryColorShade50?: string;
    primaryColorShade100?: string;
    secondaryColor?: string;
    secondaryColorShade50?: string;
    whiteColor?: string;
    lightColor?: string;
    lightColorShade50?: string;
    lightColorShade100?: string;
    mediumColor?: string;
    darkColor?: string;
    disabledColor?: string;
    typingColor?: string;
    spacing?: string;
    borderRadius?: string;
    transitionDuration?: string;
    fontFamily?: string;
    windowWidth?: string;
    windowHeight?: string;
    windowBottom?: string;
    windowRight?: string;
    windowZIndex?: string;
    windowBorder?: string;
    windowBorderRadius?: string;
    windowMarginBottom?: string;
    headerHeight?: string;
    headerPadding?: string;
    headerBackground?: string;
    headerColor?: string;
    headerBorderTop?: string;
    headerBorderBottom?: string;
    headerBorderLeft?: string;
    headerBorderRight?: string;
    headingFontSize?: string;
    subtitleFontSize?: string;
    subtitleLineHeight?: string;
    messageFontSize?: string;
    messagePadding?: string;
    messageBorderRadius?: string;
    messageLineHeight?: string;
    messageMarginBottom?: string;
    botMessageBackground?: string;
    botMessageColor?: string;
    botMessageBorder?: string;
    userMessageBackground?: string;
    userMessageColor?: string;
    userMessageBorder?: string;
    messagePreBackground?: string;
    messagesListPadding?: string;
    toggleSize?: string;
    toggleWidth?: string;
    toggleHeight?: string;
    toggleBorderRadius?: string;
    toggleBackground?: string;
    toggleHoverBackground?: string;
    toggleActiveBackground?: string;
    toggleColor?: string;
    textareaHeight?: string;
    textareaMaxHeight?: string;
    inputFontSize?: string;
    inputBorder?: string;
    inputBorderRadius?: string;
    inputPadding?: string;
    inputBackground?: string;
    inputTextColor?: string;
    inputLineHeight?: string;
    inputPlaceholderFontSize?: string;
    inputBorderActive?: string;
    inputLeftPanelWidth?: string;
    buttonColor?: string;
    buttonBackground?: string;
    buttonPadding?: string;
    buttonBorderRadius?: string;
    buttonHoverColor?: string;
    buttonHoverBackground?: string;
    closeButtonSize?: string;
    closeButtonColor?: string;
    closeButtonBackground?: string;
    closeButtonColorHover?: string;
    closeButtonBackgroundHover?: string;
    closeButtonBorderRadius?: string;
    closeButtonPadding?: string;
    closeButtonIconSize?: string;
    closeButtonPosition?: string;
    closeButtonTop?: string;
    closeButtonRight?: string;
    closeButtonBottom?: string;
    closeButtonLeft?: string;
    closeButtonZIndex?: string;
    sendButtonBackground?: string;
    sendButtonColor?: string;
    sendButtonBackgroundHover?: string;
    sendButtonColorHover?: string;
    fileButtonBackground?: string;
    fileButtonColor?: string;
    fileButtonBackgroundHover?: string;
    fileButtonColorHover?: string;
    filesSpacing?: string;
    elevenLabsButtonBackground?: string;
    elevenLabsButtonColor?: string;
    elevenLabsButtonBackgroundHover?: string;
    elevenLabsButtonColorHover?: string;
    elevenLabsButtonBackgroundDisabled?: string;
    elevenLabsButtonColorDisabled?: string;
    elevenLabsButtonBorderRadius?: string;
    elevenLabsButtonFocusColor?: string;
    bodyBackground?: string;
    footerBackground?: string;
    footerColor?: string;
    customCSS?: string;
    welcomeMessageBackground?: string;
    welcomeMessageColor?: string;
    welcomeMessageBorder?: string;
    welcomeMessageBorderRadius?: string;
    welcomeMessagePadding?: string;
    welcomeMessageFontSize?: string;
    welcomeMessageFontFamily?: string;
    welcomeMessageFontWeight?: string;
    welcomeMessageLineHeight?: string;
    welcomeMessageMaxWidth?: string;
    welcomeMessageMinWidth?: string;
    welcomeMessageBoxShadow?: string;
    welcomeMessageBoxShadowHover?: string;
    welcomeMessageBorderHover?: string;
    welcomeMessageTransformHover?: string;
    welcomeMessageTransition?: string;
    welcomeMessageZIndex?: string;
    welcomeMessagePosition?: string;
    welcomeMessageBottom?: string;
    welcomeMessageRight?: string;
    welcomeMessageTop?: string;
    welcomeMessageLeft?: string;
    welcomeMessageAlignItems?: string;
    welcomeMessageJustifyContent?: string;
    welcomeMessageTextAlign?: string;
    welcomeMessageIconSize?: string;
    welcomeMessageIconGap?: string;
    welcomeMessageIconEmojiSize?: string;
    welcomeMessageIconBorderRadius?: string;
    welcomeMessageIconBackground?: string;
    welcomeMessageIconPadding?: string;
    welcomeMessageCloseSize?: string;
    welcomeMessageCloseFontSize?: string;
    welcomeMessageCloseColor?: string;
    welcomeMessageCloseBackground?: string;
    welcomeMessageCloseBackgroundHover?: string;
    welcomeMessageCloseColorHover?: string;
    welcomeMessageCloseBorderRadius?: string;
    welcomeMessageCloseTransition?: string;
    welcomeMessageCloseFocusShadow?: string;
    welcomeMessageMobileMaxWidth?: string;
    welcomeMessageMobileIconSize?: string;
    welcomeMessageMobileIconEmojiSize?: string;
    welcomeMessageMobileFontSize?: string;
    welcomeMessageMobileGap?: string;
    welcomeMessageArrowRightOffset?: string;
    headerIconSize?: string;
    headerIconMarginRight?: string;
    headerIconEmojiSize?: string;
    headerIconBorderRadius?: string;
    headerIconBackground?: string;
    headerIconPadding?: string;
}
export interface ChatOptions {
    webhookUrl: string;
    webhookConfig?: {
        method?: 'GET' | 'POST';
        headers?: Record<string, string>;
    };
    target?: string | Element;
    mode?: 'window' | 'fullscreen';
    showWindowCloseButton?: boolean;
    showWelcomeScreen?: boolean;
    loadPreviousSession?: boolean;
    chatInputKey?: string;
    chatSessionKey?: string;
    defaultLanguage?: 'en';
    initialMessages?: string[];
    metadata?: Record<string, unknown>;
    i18n: Record<string, {
        title: string;
        subtitle: string;
        footer: string;
        getStarted: string;
        inputPlaceholder: string;
        closeButtonTooltip: string;
        [message: string]: string;
    }>;
    theme?: ChatTheme;
    messageComponents?: Record<string, Component>;
    disabled?: Ref<boolean>;
    allowFileUploads?: Ref<boolean> | boolean;
    allowedFilesMimeTypes?: Ref<string> | string;
    elevenLabsAgentUrl?: string;
    showElevenLabsButton?: boolean;
    showPoweredBy?: boolean;
    welcomeMessage?: {
        enabled?: boolean;
        text?: string;
        icon?: string;
        showArrow?: boolean;
    };
    headerIcon?: string;
}
